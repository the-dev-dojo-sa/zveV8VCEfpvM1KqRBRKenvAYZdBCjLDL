name: Build Installer

on:
  workflow_dispatch:
    inputs:
      runtime:
        description: "Target runtime (e.g. linux-x64)"
        required: true
        type: string
      version:
        description: "Version (e.g. 0.0.1)"
        required: true
        type: string
      src_url:
        description: "URL to download build files"
        required: true
        type: string
      dst_url:
        description: "URL to upload final installer"
        required: true
        type: string

jobs:
  build-widows:
    if: startsWith(github.event.inputs.runtime, 'win-')
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download build files
        run: |
          curl -o build.zip "${{ github.event.inputs.src_url }}"
          Expand-Archive -Path build.zip -DestinationPath ./build

      - name: Replace versions
        run: |
          $content = Get-Content -Path "Installers/win-x64/setup.iss" -Raw
          $newContent = $content -replace "{AppVersion}", "${{ github.event.inputs.version }}"
          Set-Content -Path "Installers/win-x64/setup.iss" -Value $newContent
          type "Installers/win-x64/setup.iss"

      - name: Create installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: Installers/win-x64/setup.iss
          options: /O+

      - name: Upload installer
        run: |
          Invoke-WebRequest -Method POST -Uri ${{ github.event.inputs.dst_url }} `
              -Form @{ installer = Get-Item -Path 'Installers/win-x64/Nachert-setup.exe' } `
              -Headers @{ Authorization = "Basic ${{ secrets.NACHERT_API_KEY }}" }

  build-linux:
    if: startsWith(github.event.inputs.runtime, 'linux-')
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download build files
        run: |
          curl -o build.zip "${{ github.event.inputs.src_url }}"
          unzip build.zip -d ./build

      - name: Replace versions
        run: |
          sed -i "s/{AppVersion}/${{ github.event.inputs.version }}/g" "Installers/linux-x64/debpkg/usr/share/applications/Nachert.desktop"
          sed -i "s/{AppVersion}/${{ github.event.inputs.version }}/g" "Installers/linux-x64/debpkg/DEBIAN/control"

      - name: Set arm-64 architecture
        if: endsWith(github.event.inputs.runtime, '-arm64')
        run: |
          sed -i "s/amd64/arm64/g" "Installers/linux-x64/debpkg/DEBIAN/control"

      - name: Build deb package
        run: |
          cp -r build Installers/linux-x64/debpkg/opt/TheDevDojo/Nachert
          chmod 755 Installers/linux-x64/debpkg/DEBIAN/postinst
          chmod 755 Installers/linux-x64/debpkg/DEBIAN/prerm
          
          dpkg-deb --build Installers/linux-x64/debpkg

      - name: Upload installer
        run: |
          curl -X POST -F "installer=@Installers/linux-x64/debpkg.deb" "${{ github.event.inputs.dst_url }}" \
          -H 'Authorization: Basic ${{ secrets.NACHERT_API_KEY }}'

  build-macos:
    if: startsWith(github.event.inputs.runtime, 'osx-')
    runs-on: macos-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download build files
        run: |
          curl -o build.zip "${{ github.event.inputs.src_url }}"
          unzip build.zip -d Installers/mac-x64/Nachert.app/Contents/MacOS

      - name: Replace versions
        run: |
          sed -i '' "s/{AppVersion}/${{ github.event.inputs.version }}/g" "Installers/mac-x64/Nachert.app/Contents/info.plist"

      - name: Sign code
        run: |
          codesign --force --timestamp --deep --entitlements Installers/mac-x64/NachertEntitlements.entitlements --sign - Installers/mac-x64/Nachert.app
          
      - name: Create installer
        uses: QQxiaoming/create-dmg-action@v0.0.2
        with:
          name: Nachert
          srcdir: Installers/mac-x64/Nachert.app

      - name: Upload installer
        run: |
          curl -X POST -F "installer=@Nachert.dmg" "${{ github.event.inputs.dst_url }}" \
          -H 'Authorization: Basic ${{ secrets.NACHERT_API_KEY }}'
